/*
  Focus utility classes that can be used to show consistent focus styles across
  any focusable element.
*/

.rpl-u-focusable {
  cursor: pointer;

  &:focus-visible,
  &:focus-visible:visited,
  &:focus-visible:hover {
    background-color: var(--rpl-clr-focus);
    border-color: var(--rpl-clr-focus);
    border-radius: 0;
    border-width: var(--rpl-focusable-border-width, 0);
    color: var(--rpl-clr-dark);
    text-decoration: none;
    text-decoration-line: none;
    outline: 0;
    position: relative;

    &::after {
      content: '';
      background-color: var(--rpl-clr-dark);
      position: absolute;
      left: calc(0px - var(--rpl-focusable-border-width, 0px));
      bottom: calc(var(--rpl-focusable-border-width, 0px) * -1); /* invert border width as bottom position */
      height: var(--rpl-border-3);
      width: calc(100% + var(--rpl-focusable-border-width, 0%) * 2); /* 100% + left and right border width */
    }
  }
}

.rpl-u-focusable--inline {
  --rpl-focusable-inline-spacing: 2px;

  &:focus-visible,
  &:focus-visible:visited,
  &:focus-visible:hover {
    box-shadow: 0 0 0 var(--rpl-focusable-inline-spacing) var(--rpl-clr-focus);

    &::after {
      bottom: -2px;
      left: calc(0px - var(--rpl-focusable-border-width, 0px) - var(--rpl-focusable-inline-spacing)); /* 0 - left border width - left spacing */
      width: calc(100% + (var(--rpl-focusable-border-width, 0%) * 2) + (var(--rpl-focusable-inline-spacing) * 2)); /* 100% + left and right border width + left and right spacing */
    }
  }
}
